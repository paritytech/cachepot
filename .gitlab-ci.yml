# .gitlab-ci.yml
#
# cachepot

stages:
  - check
  - test
  - build
  - publish

variables:
  GIT_STRATEGY:                    fetch
  GIT_DEPTH:                       100
  CARGO_INCREMENTAL:               0
  RUST_BACKTRACE:                  1
  # this var is changed to "-:staging" when the CI image gets rebuilt
  # read more https://github.com/paritytech/scripts/pull/244
  CI_IMAGE:                        "paritytech/cachepot-ci:staging" # temporary override
  BUILDAH_IMAGE:                   "quay.io/buildah/stable:v1.27"

default:
  cache:                           {}
  interruptible:                   true
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure

.docker-env:                       &docker-env
  image:                           "${CI_IMAGE}"
  before_script:
    - which gcc && gcc --version
    - which clang && clang --version
    - rustc +stable --version
    - rustc +nightly --version
  tags:
    - linux-docker-vm-c2

.kubernetes-env:                   &kubernetes-env
  tags:
    - kubernetes-parity-build

.build-refs:                       &build-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME == "tags"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # i.e. v1.0, v2.1rc1

.publish-refs:                     &publish-refs
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME == "tags"
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/              # i.e. v1.0, v2.1rc1

.collect-artifacts:                &collect-artifacts
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     7 days
    paths:
      - artifacts/

#### stage:                       check

fmt:
  <<:                              *docker-env
  stage:                           check
  script:
    - cargo fmt -- --check
  allow_failure:                   true

clippy:
  <<:                              *docker-env
  stage:                           check
  script:
    - cargo clippy --all-targets
  allow_failure:                   true

#### stage:                       test

nightly-test:
  <<:                              *docker-env
  stage:                           test
  variables:
    FEATURES:                      "unstable"
  script:
    - cargo +nightly build --verbose --features="${FEATURES}" || exit 1
    - cargo +nightly test --workspace --verbose --features="${FEATURES}"

stable-test:
  <<:                              *docker-env
  stage:                           test
  variables:
    FEATURES:                      ""
  script:
    - cargo +stable build --verbose --features="${FEATURES}" || exit 1
    - cargo +stable test --workspace --verbose --features="${FEATURES}"

stable-dist-test:
  <<:                              *docker-env
  stage:                           test
  variables:
    FEATURES:                      "dist-tests"
    DIST_EXEC_STRATEGY:            "spawn"
    CACHEPOT_SANDBOX:              "userns"
    CACHEPOT_LOG:                  "cachepot=trace"
  script:
    - uname -a
    # https://github.com/paritytech/ci_cd/issues/490#issuecomment-1171587793
    - mkdir /tmp/dummy_proc && mount -t proc proc /tmp/dummy_proc
    - cargo test --verbose --no-default-features --features="${FEATURES}" test_dist_ -- --test-threads 1

build:
  <<:                              *docker-env
  <<:                              *collect-artifacts
  <<:                              *build-refs
  stage:                           build
  variables:
    FEATURES:                     "openssl/vendored,dist-worker"
  script:
    - cargo +stable build --locked --release --verbose --bin cachepot-dist --target x86_64-unknown-linux-musl --features=${FEATURES}
    # collect artifacts
    - mkdir -p ./artifacts/cachepot/
    - mv ./target/x86_64-unknown-linux-musl/release/cachepot-dist ./artifacts/cachepot/.
    - mv ./systemd/Dockerfile.vendor.cachepot-dist ./artifacts/cachepot/.


.build-push-docker-image:          &build-push-docker-image
  <<:                              *kubernetes-env
  image:                           $BUILDAH_IMAGE
  variables:
    GIT_STRATEGY:                  none
    DOCKERFILE:                    Dockerfile.vendor.cachepot-dist
    IMAGE_NAME:                    docker.io/paritytech/cachepot-dist
  before_script:
    - cd ./artifacts/cachepot/
    - VERSION=${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}
  script:
    - test "$Docker_Hub_User_Parity" -a "$Docker_Hub_Pass_Parity" ||
        ( echo "no docker credentials provided"; exit 1 )
    - buildah bud
        --format=docker
        --build-arg VCS_REF="${CI_COMMIT_SHA}"
        --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
        --tag "$IMAGE_NAME:$VERSION"
        --tag "$IMAGE_NAME:latest"
        --file "$DOCKERFILE" .
    - echo "$Docker_Hub_Pass_Parity" |
        buildah login --username "$Docker_Hub_User_Parity" --password-stdin docker.io
    - buildah info
    - buildah push --format=v2s2 "$IMAGE_NAME:$VERSION"
  after_script:
    - buildah logout --all

publish-cachepot-dist:
  stage:                           publish
  <<:                              *publish-refs
  <<:                              *build-push-docker-image
  needs:
    - job:                         build
      artifacts:                   true
