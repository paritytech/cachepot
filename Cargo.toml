[package]
name = "sccache"
version = "0.2.14-alpha.0"
authors = ["Bernhard Schuster <bernhard@ahoi.io>", "Ted Mielczarek <ted@mielczarek.org>", "Alex Crichton <alex@alexcrichton.com>"]
license = "Apache-2.0"
description = "Sccache is a ccache-like tool. It is used as a compiler wrapper and avoids compilation when possible, storing a cache in a remote storage using the S3 API."
repository = "https://github.com/paritytech/sccache/"
readme = "README.md"
categories = ["command-line-utilities", "development-tools::build-utils"]
keywords = ["ccache", "compile", "cache", "sccache"]
edition = "2018"

[[bin]]
name = "sccache"

[[bin]]
name = "sccache-dist"
required-features = ["dist-server"]

[dependencies]
anyhow = "1.0"
ar = { version = "0.8", optional = true }
async-trait = "0.1"
atty = "^0.2.6"
base64 = { version = "0.13.0", features = ["std"] }
bincode = "1"
blake3 = "0.3"
byteorder = "1.0"
bytes = "0.5"
chrono = { version = "0.4", optional = true }
clap = "2.33"
counted-array = "0.1"
directories = "3"
env_logger = "0.8"
filetime = "0.2"
flate2 = { version = "1.0", optional = true, default-features = false, features = ["rust_backend"] }
futures = "^0.1.11"
futures_03 = { package = "futures", version = "0.3", features = ["compat"] }
futures-locks = "0.6"

hmac = { version = "0.10", optional = true }
http = "^0.2.1"
hyper = { version = "0.13", optional = true }
hyperx = { version = "0.13", optional = true }
hyper-rustls = { version = "0.21", optional = true }
jobserver = "0.1"
jsonwebtoken = { version = "7", optional = true }
lazy_static = "1.4"
libc = "^0.2.10"
local-encoding = "0.2.0"
log = "0.4"
lru-disk-cache = { path = "lru-disk-cache", version = "0.4.0" }
md-5 = { version = "0.9", optional = true }
memcached-rs = { version = "0.4" , optional = true }
num_cpus = "1.13"
number_prefix = "0.2"
# avoid duplicate dependency by sticking to 0.1 for now
oid = "0.1"
# x509 certificate generation
picky = "^6.1.1"
picky-asn1-x509 = "0.4"
rand = "0.7"
redis = { version = "0.15.0", optional = true }
regex = "1"
reqwest = { version = "0.10", features = ["rustls-tls", "json", "blocking"], optional = true }
retry = "0.4.0"
rsa = "0.3"
# exports pkcs#1
rsa-export = "0.2"
# both are pkcs8 only
rsa-der = "0.2"
rsa-pem = "0.2"
ring = { version = "0.16.15", features = ["std"], optional = true }
rusoto_core = { version = "0.45.0", default_features=false, features = ["rustls"], optional = true }
rusoto_s3 = { version = "0.45.0", default_features=false, features = ["rustls"], optional = true }
sha-1 = { version = "0.9", optional = true }
sha2 = { version = "0.9", optional = true }
serde = "1.0"
serde_derive = "1.0"
serde_json = "1.0"
strip-ansi-escapes = "0.1"
tar = "0.4"
tempfile = "3"
# while generally anyhow is sufficient, it's not `Clone`
# which is necessary for some trait objects
thiserror = "1"
time = "0.1.35"
tokio_02 = { package = "tokio", version = "0.2", features = ["io-util", "time", "uds", "tcp", "process"] }
tokio-compat = "0.1"
tokio-io = "0.1"
tokio-process = "0.2"
tokio-serde = "0.6"
tokio-util = { version = "0.3", features = ["codec"] }
tower = "0.3"
tokio-tcp = "0.1"
tokio-timer = "0.2"
toml = "0.5"
untrusted = { version = "0.6.0", optional = true }
url = { version = "1.0", optional = true }
uuid = { version = "0.8", features = ["v4"] }
walkdir = "2"
# by default which pulls in an outdated failure version
which = { version = "4", default-features = false }
zip = { version = "0.5", default-features = false, features = ["deflate"] }
zstd = { version = "0.6" }

# dist-server only
crossbeam-utils = { version = "0.8", optional = true }
libmount = { version = "0.1.10", optional = true }
nix = { version = "0.17.0", optional = true }
rouille = { version = "2.2", optional = true, default-features = false, features = ["ssl"] }
syslog = { version = "5", optional = true }
void = { version = "1", optional = true }
version-compare = { version = "0.0.11", optional = true }

# test only
openssl = { version = "0.10", optional = true }

[patch.crates-io]
# Waiting for #151 to make it into a release
tiny_http = { git = "https://github.com/tiny-http/tiny-http.git", rev = "619680de" }

[dev-dependencies]
assert_cmd = "1"
assert_matches = "1"
cc = "1.0"
chrono = "0.4"
itertools = "0.10"
predicates = "1"
selenium-rs = "0.1"

[target.'cfg(unix)'.dependencies]
daemonize = "0.4"

[target.'cfg(windows)'.dependencies]
tokio-named-pipes = "0.1"
tokio-reactor = "0.1"

[target.'cfg(windows)'.dependencies.winapi]
version = "0.3"
features = [
    "fileapi",
    "handleapi",
    "winnls",
]

[features]
default = ["redis", "s3", "memcached", "gcs", "azure", "dist-client", "dist-server"]
# legacy compat, do not use
all = ["redis", "s3", "memcached", "gcs", "azure", "dist-client", "dist-server"]

azure = ["chrono", "hyper", "hyperx", "reqwest", "url", "hmac", "md-5", "sha2"]
s3 = ["chrono", "hyper", "hyper-rustls", "hyperx", "reqwest", "rusoto_core", "rusoto_s3", "hmac", "sha-1"]
simple-s3 = []
gcs = ["chrono", "hyper", "hyperx", "reqwest", "ring", "untrusted", "url", "sha2"]
memcached = ["memcached-rs"]

native-zlib = ["zip/deflate-zlib"]
# Enable features that require unstable features of Nightly Rust.
unstable = []

# Enables distributed support in the sccache client
dist-client = ["ar", "flate2", "hyper", "hyperx", "reqwest", "url", "sha2"]
# Enables the sccache-dist binary
dist-server = ["chrono", "crossbeam-utils", "hyperx", "jsonwebtoken", "flate2", "libmount", "nix", "reqwest", "rouille", "sha2", "syslog", "void", "version-compare"]
# Enables dist tests with external requirements
dist-tests = ["dist-client", "dist-server"]
# Run JWK token crypto against openssl ref impl
vs_openssl = ["openssl", "dist-server"]

[workspace]
exclude = ["tests/test-crate"]
